android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.cqu.android.Activity.IntentList -> com.cqu.android.Activity.a:
    java.util.List infoList -> a
    java.util.List getRunableList(android.content.pm.PackageManager,boolean) -> a
    android.content.Intent getIntent(java.lang.String,android.content.pm.PackageManager) -> a
com.cqu.android.Activity.MainActivity -> com.cqu.android.Activity.MainActivity:
    android.widget.ListView listview -> b
    android.app.ActivityManager am -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void checkPreferences() -> b
    void refreshHeader() -> c
    void selectMode() -> d
    void toggleLogEnabled() -> e
    void showOrLoadApplications() -> a
    void showApplications() -> f
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    java.lang.String unitHandler(long) -> a
    void disableOrEnable() -> g
    void showLog() -> h
    void clearLog() -> i
    void applyOrSaveRules() -> j
    void purgeRules() -> k
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    void onClick(android.view.View) -> onClick
    void access$0(com.cqu.android.Activity.MainActivity) -> a
    void access$1(com.cqu.android.Activity.MainActivity) -> b
    java.lang.String access$2(com.cqu.android.Activity.MainActivity,long) -> a
com.cqu.android.Activity.MainActivity$1 -> com.cqu.android.Activity.b:
    com.cqu.android.Activity.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cqu.android.Activity.MainActivity$2 -> com.cqu.android.Activity.c:
    com.cqu.android.Activity.MainActivity this$0 -> a
    android.app.ProgressDialog val$progress -> b
    void handleMessage(android.os.Message) -> handleMessage
com.cqu.android.Activity.MainActivity$3 -> com.cqu.android.Activity.d:
    com.cqu.android.Activity.MainActivity this$0 -> a
    android.os.Handler val$handler -> b
    void run() -> run
com.cqu.android.Activity.MainActivity$4 -> com.cqu.android.Activity.e:
    com.cqu.android.Activity.MainActivity this$0 -> a
    int compare(com.cqu.android.bean.Api$DroidApp,com.cqu.android.bean.Api$DroidApp) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.cqu.android.Activity.MainActivity$5 -> com.cqu.android.Activity.f:
    com.cqu.android.Activity.MainActivity this$0 -> a
    android.view.LayoutInflater val$inflater -> b
    com.cqu.android.bean.Api$DroidApp[] val$apps -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void convertAndSetColor(long,android.widget.TextView) -> a
    com.cqu.android.Activity.MainActivity access$0(com.cqu.android.Activity.MainActivity$5) -> a
com.cqu.android.Activity.MainActivity$5$1 -> com.cqu.android.Activity.g:
    com.cqu.android.Activity.MainActivity$5 this$1 -> a
    com.cqu.android.bean.Api$DroidApp val$app -> b
    void onClick(android.view.View) -> onClick
com.cqu.android.Activity.MainActivity$6 -> com.cqu.android.Activity.h:
    com.cqu.android.Activity.MainActivity this$0 -> a
    android.app.ProgressDialog val$progress -> b
    void handleMessage(android.os.Message) -> handleMessage
com.cqu.android.Activity.MainActivity$7 -> com.cqu.android.Activity.i:
    com.cqu.android.Activity.MainActivity this$0 -> a
    android.app.ProgressDialog val$progress -> b
    void handleMessage(android.os.Message) -> handleMessage
com.cqu.android.Activity.MainActivity$8 -> com.cqu.android.Activity.j:
    com.cqu.android.Activity.MainActivity this$0 -> a
    android.app.ProgressDialog val$progress -> b
    boolean val$enabled -> c
    void handleMessage(android.os.Message) -> handleMessage
com.cqu.android.Activity.MainActivity$9 -> com.cqu.android.Activity.k:
    com.cqu.android.Activity.MainActivity this$0 -> a
    android.app.ProgressDialog val$progress -> b
    void handleMessage(android.os.Message) -> handleMessage
com.cqu.android.Activity.MainActivity$ListEntry -> com.cqu.android.Activity.l:
    android.widget.ImageView app_Icon -> a
    android.widget.CheckBox box_wifi -> b
    android.widget.CheckBox box_3g -> c
    android.widget.TextView app_text -> d
    android.widget.TextView upload -> e
    android.widget.TextView download -> f
    void access$1(com.cqu.android.Activity.MainActivity$ListEntry,android.widget.CheckBox) -> a
    void access$2(com.cqu.android.Activity.MainActivity$ListEntry,android.widget.CheckBox) -> b
    void access$3(com.cqu.android.Activity.MainActivity$ListEntry,android.widget.ImageView) -> a
    void access$4(com.cqu.android.Activity.MainActivity$ListEntry,android.widget.TextView) -> a
    void access$5(com.cqu.android.Activity.MainActivity$ListEntry,android.widget.TextView) -> b
    void access$6(com.cqu.android.Activity.MainActivity$ListEntry,android.widget.TextView) -> c
    android.widget.CheckBox access$7(com.cqu.android.Activity.MainActivity$ListEntry) -> a
    android.widget.CheckBox access$8(com.cqu.android.Activity.MainActivity$ListEntry) -> b
    android.widget.TextView access$9(com.cqu.android.Activity.MainActivity$ListEntry) -> c
    android.widget.TextView access$10(com.cqu.android.Activity.MainActivity$ListEntry) -> d
    android.widget.TextView access$11(com.cqu.android.Activity.MainActivity$ListEntry) -> e
    android.widget.ImageView access$12(com.cqu.android.Activity.MainActivity$ListEntry) -> f
com.cqu.android.Activity.MiscUtil -> com.cqu.android.Activity.m:
    android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,java.lang.String) -> a
    android.app.Dialog getTaskMenuDialog(com.cqu.android.Activity.MainActivity,com.cqu.android.bean.Api$DroidApp) -> a
com.cqu.android.Activity.MiscUtil$1 -> com.cqu.android.Activity.n:
    com.cqu.android.Activity.MainActivity val$ma -> a
    com.cqu.android.bean.Api$DroidApp val$dd -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.cqu.android.Activity.MyApplication -> com.cqu.android.Activity.MyApplication:
    android.view.WindowManager$LayoutParams wmParams -> a
    android.view.WindowManager$LayoutParams getWindowParams() -> a
com.cqu.android.Activity.PackageBroadcast -> com.cqu.android.Activity.PackageBroadcast:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.cqu.android.Activity.StatusWidget -> com.cqu.android.Activity.StatusWidget:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void showWidget(android.content.Context,android.appwidget.AppWidgetManager,int[],boolean) -> a
com.cqu.android.Activity.StatusWidget$1 -> com.cqu.android.Activity.o:
    com.cqu.android.Activity.StatusWidget this$0 -> a
    android.content.Context val$context -> b
    void handleMessage(android.os.Message) -> handleMessage
com.cqu.android.Activity.StatusWidget$2 -> com.cqu.android.Activity.p:
    com.cqu.android.Activity.StatusWidget this$0 -> a
    boolean val$enabled -> b
    android.content.Context val$context -> c
    android.os.Handler val$toaster -> d
    void run() -> run
com.cqu.android.Activity.aboutus -> com.cqu.android.Activity.aboutus:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.cqu.android.Activity.keepInTime -> com.cqu.android.Activity.keepInTime:
    android.widget.TextView textview -> c
    android.widget.TextView GPRS -> d
    android.widget.TextView WIFI -> e
    android.widget.TextView jintians_3g -> f
    android.widget.TextView jintianx_3g -> g
    android.widget.TextView jintianz_3g -> h
    android.widget.TextView benzhous_3g -> i
    android.widget.TextView benzhoux_3g -> j
    android.widget.TextView benzhouz_3g -> k
    android.widget.TextView benyues_3g -> l
    android.widget.TextView benyuex_3g -> m
    android.widget.TextView benyuez_3g -> n
    android.widget.TextView jintians_wifi -> o
    android.widget.TextView jintianx_wifi -> p
    android.widget.TextView jintianz_wifi -> q
    android.widget.TextView benzhous_wifi -> r
    android.widget.TextView benzhoux_wifi -> s
    android.widget.TextView benzhouz_wifi -> t
    android.widget.TextView benyues_wifi -> u
    android.widget.TextView benyuex_wifi -> v
    android.widget.TextView benyuez_wifi -> w
    com.cqu.android.db.DatabaseAdapter dbAdapter -> a
    java.util.Calendar currentCa -> b
    android.os.Handler handler -> x
    java.lang.Runnable runnable -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.os.Handler access$0(com.cqu.android.Activity.keepInTime) -> a
    void access$1(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> a
    void access$2(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> b
    void access$3(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> c
    void access$4(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> d
    void access$5(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> e
    void access$6(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> f
    void access$7(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> g
    void access$8(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> h
    void access$9(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> i
    void access$10(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> j
    void access$11(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> k
    void access$12(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> l
    void access$13(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> m
    void access$14(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> n
    void access$15(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> o
    void access$16(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> p
    void access$17(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> q
    void access$18(com.cqu.android.Activity.keepInTime,android.widget.TextView) -> r
    android.widget.TextView access$19(com.cqu.android.Activity.keepInTime) -> b
    android.widget.TextView access$20(com.cqu.android.Activity.keepInTime) -> c
    android.widget.TextView access$21(com.cqu.android.Activity.keepInTime) -> d
    android.widget.TextView access$22(com.cqu.android.Activity.keepInTime) -> e
    android.widget.TextView access$23(com.cqu.android.Activity.keepInTime) -> f
    android.widget.TextView access$24(com.cqu.android.Activity.keepInTime) -> g
    android.widget.TextView access$25(com.cqu.android.Activity.keepInTime) -> h
    android.widget.TextView access$26(com.cqu.android.Activity.keepInTime) -> i
    android.widget.TextView access$27(com.cqu.android.Activity.keepInTime) -> j
    android.widget.TextView access$28(com.cqu.android.Activity.keepInTime) -> k
    android.widget.TextView access$29(com.cqu.android.Activity.keepInTime) -> l
    android.widget.TextView access$30(com.cqu.android.Activity.keepInTime) -> m
    android.widget.TextView access$31(com.cqu.android.Activity.keepInTime) -> n
    android.widget.TextView access$32(com.cqu.android.Activity.keepInTime) -> o
    android.widget.TextView access$33(com.cqu.android.Activity.keepInTime) -> p
    android.widget.TextView access$34(com.cqu.android.Activity.keepInTime) -> q
    android.widget.TextView access$35(com.cqu.android.Activity.keepInTime) -> r
    android.widget.TextView access$36(com.cqu.android.Activity.keepInTime) -> s
com.cqu.android.Activity.keepInTime$1 -> com.cqu.android.Activity.q:
    com.cqu.android.Activity.keepInTime this$0 -> a
    void run() -> run
    void update() -> a
com.cqu.android.Activity.liuliangjiankong -> com.cqu.android.Activity.liuliangjiankong:
    void onCreate(android.os.Bundle) -> onCreate
com.cqu.android.Activity.liuliangjiankong$1 -> com.cqu.android.Activity.r:
    com.cqu.android.Activity.liuliangjiankong this$0 -> a
    void run() -> run
com.cqu.android.Activity.mainPage -> com.cqu.android.Activity.mainPage:
    android.widget.GridView toolbarGrid -> g
    android.widget.TextView upRate -> a
    android.widget.TextView downRate -> b
    java.util.Calendar currentCa -> h
    com.cqu.android.db.DatabaseAdapter dbAdapter -> i
    int TOOLBAR_ITEM_KEEPINTIME -> j
    int TOOLBAR_ITEM_NETLIST -> k
    int TOOLBAR_ITEM_STATIST -> l
    int TOOLBAR_ITEM_SETTING -> m
    int TOOLBAR_ITEM_ABOUT -> n
    int[] menu_toolbar_image_array -> c
    java.lang.String[] menu_toolbar_name_array -> d
    android.os.Handler handler -> o
    java.lang.Runnable runnable -> p
    long waitTime -> e
    long touchTime -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    android.widget.SimpleAdapter getMenuAdapter(java.lang.String[],int[]) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.os.Handler access$0(com.cqu.android.Activity.mainPage) -> a
    void access$1(com.cqu.android.Activity.mainPage,java.util.Calendar) -> a
    java.util.Calendar access$2(com.cqu.android.Activity.mainPage) -> b
    com.cqu.android.db.DatabaseAdapter access$3(com.cqu.android.Activity.mainPage) -> c
com.cqu.android.Activity.mainPage$1 -> com.cqu.android.Activity.s:
    com.cqu.android.Activity.mainPage this$0 -> a
    void run() -> run
    void update() -> a
com.cqu.android.Activity.mainPage$2 -> com.cqu.android.Activity.t:
    com.cqu.android.Activity.mainPage this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.cqu.android.Activity.setting -> com.cqu.android.Activity.setting:
    android.view.View View_quota -> d
    android.view.View View_left -> e
    android.view.View View_clear -> f
    android.view.View View_date -> g
    android.widget.EditText dt -> h
    android.widget.EditText dt1 -> i
    com.cqu.android.db.DatabaseAdapter dbAdapter -> j
    java.lang.String mLeft -> a
    java.lang.String mCountDate -> b
    java.lang.String mLimit -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    boolean BoxState(java.lang.String) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void access$0(com.cqu.android.Activity.setting,android.view.View) -> a
    android.view.View access$1(com.cqu.android.Activity.setting) -> a
    void access$2(com.cqu.android.Activity.setting,android.widget.EditText) -> a
    android.widget.EditText access$3(com.cqu.android.Activity.setting) -> b
    void access$4(com.cqu.android.Activity.setting,android.view.View) -> b
    android.view.View access$5(com.cqu.android.Activity.setting) -> c
    void access$6(com.cqu.android.Activity.setting,android.view.View) -> c
    android.view.View access$7(com.cqu.android.Activity.setting) -> d
    void access$8(com.cqu.android.Activity.setting,android.widget.EditText) -> b
    android.widget.EditText access$9(com.cqu.android.Activity.setting) -> e
    void access$10(com.cqu.android.Activity.setting,android.view.View) -> d
    android.view.View access$11(com.cqu.android.Activity.setting) -> f
    com.cqu.android.db.DatabaseAdapter access$12(com.cqu.android.Activity.setting) -> g
com.cqu.android.Activity.setting$1 -> com.cqu.android.Activity.u:
    com.cqu.android.Activity.setting this$0 -> a
    android.widget.TextView val$is_Window -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.cqu.android.Activity.setting$2 -> com.cqu.android.Activity.v:
    com.cqu.android.Activity.setting this$0 -> a
    android.widget.TextView val$is_warn -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.cqu.android.Activity.setting$3 -> com.cqu.android.Activity.w:
    com.cqu.android.Activity.setting this$0 -> a
    android.widget.TextView val$limit_flow -> b
    void onClick(android.view.View) -> onClick
    com.cqu.android.Activity.setting access$0(com.cqu.android.Activity.setting$3) -> a
com.cqu.android.Activity.setting$3$1 -> com.cqu.android.Activity.x:
    com.cqu.android.Activity.setting$3 this$1 -> a
    android.widget.TextView val$limit_flow -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.cqu.android.Activity.setting$4 -> com.cqu.android.Activity.y:
    com.cqu.android.Activity.setting this$0 -> a
    void onClick(android.view.View) -> onClick
com.cqu.android.Activity.setting$4$1 -> com.cqu.android.Activity.z:
    com.cqu.android.Activity.setting$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.cqu.android.Activity.setting$5 -> com.cqu.android.Activity.aa:
    com.cqu.android.Activity.setting this$0 -> a
    android.widget.TextView val$flow_remind -> b
    void onClick(android.view.View) -> onClick
    com.cqu.android.Activity.setting access$0(com.cqu.android.Activity.setting$5) -> a
com.cqu.android.Activity.setting$5$1 -> com.cqu.android.Activity.ab:
    com.cqu.android.Activity.setting$5 this$1 -> a
    android.widget.TextView val$flow_remind -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.cqu.android.Activity.setting$6 -> com.cqu.android.Activity.ac:
    com.cqu.android.Activity.setting this$0 -> a
    android.widget.TextView val$clear_data -> b
    void onClick(android.view.View) -> onClick
    com.cqu.android.Activity.setting access$0(com.cqu.android.Activity.setting$6) -> a
com.cqu.android.Activity.setting$6$1 -> com.cqu.android.Activity.ad:
    com.cqu.android.Activity.setting$6 this$1 -> a
    android.widget.TextView val$clear_data -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.cqu.android.Activity.statist -> com.cqu.android.Activity.statist:
    com.cqu.android.allservice.chart.TemperatureChart at -> a
    com.cqu.android.allservice.chart.WeightDialChart weekchart -> b
    com.cqu.android.allservice.chart.CombinedTemperatureChart monthchart -> c
    android.widget.ImageView dayChartButton -> d
    android.widget.ImageView weekChartButton -> e
    android.widget.ImageView monthChartButton -> f
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.cqu.android.allservice.chart.TemperatureChart access$0(com.cqu.android.Activity.statist) -> a
    com.cqu.android.allservice.chart.WeightDialChart access$1(com.cqu.android.Activity.statist) -> b
    com.cqu.android.allservice.chart.CombinedTemperatureChart access$2(com.cqu.android.Activity.statist) -> c
com.cqu.android.Activity.statist$DayChartListener -> com.cqu.android.Activity.ae:
    com.cqu.android.Activity.statist this$0 -> a
    void onClick(android.view.View) -> onClick
com.cqu.android.Activity.statist$MonthChartListener -> com.cqu.android.Activity.af:
    com.cqu.android.Activity.statist this$0 -> a
    void onClick(android.view.View) -> onClick
com.cqu.android.Activity.statist$WeekChartListener -> com.cqu.android.Activity.ag:
    com.cqu.android.Activity.statist this$0 -> a
    void onClick(android.view.View) -> onClick
com.cqu.android.allservice.chart.AbstractDemoChart -> com.cqu.android.allservice.a.a:
    org.achartengine.model.XYMultipleSeriesDataset buildDataset(java.lang.String[],java.util.List,java.util.List) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer buildRenderer(int[],org.achartengine.chart.PointStyle[]) -> a
    void setChartSettings(org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String,java.lang.String,java.lang.String,double,double,double,double,int,int) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer buildBarRenderer(int[]) -> a
com.cqu.android.allservice.chart.CombinedTemperatureChart -> com.cqu.android.allservice.a.b:
    android.content.Intent execute(android.content.Context) -> a
com.cqu.android.allservice.chart.TemperatureChart -> com.cqu.android.allservice.a.c:
    android.content.Intent execute(android.content.Context) -> a
com.cqu.android.allservice.chart.WeightDialChart -> com.cqu.android.allservice.a.d:
    android.content.Intent execute(android.content.Context) -> a
com.cqu.android.allservice.monitoring.BootAndShutdownBroadcast -> com.cqu.android.allservice.monitoring.BootAndShutdownBroadcast:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean isStart(java.lang.String) -> a
com.cqu.android.allservice.monitoring.BootAndShutdownBroadcast$1 -> com.cqu.android.allservice.monitoring.a:
    com.cqu.android.allservice.monitoring.BootAndShutdownBroadcast this$0 -> a
    android.content.Context val$context -> b
    void handleMessage(android.os.Message) -> handleMessage
com.cqu.android.allservice.monitoring.BootAndShutdownBroadcast$2 -> com.cqu.android.allservice.monitoring.b:
    com.cqu.android.allservice.monitoring.BootAndShutdownBroadcast this$0 -> a
    android.content.Context val$context -> b
    android.os.Handler val$toaster -> c
    void run() -> run
com.cqu.android.allservice.monitoring.BootAndShutdownBroadcast$3 -> com.cqu.android.allservice.monitoring.c:
    com.cqu.android.allservice.monitoring.BootAndShutdownBroadcast this$0 -> a
    android.content.Context val$context -> b
    void run() -> run
com.cqu.android.allservice.monitoring.FloatService -> com.cqu.android.allservice.monitoring.FloatService:
    android.view.WindowManager wm -> a
    android.view.WindowManager$LayoutParams wmParams -> b
    android.view.View view -> c
    float mTouchStartX -> e
    float mTouchStartY -> f
    float x -> g
    float y -> h
    int state -> d
    android.widget.TextView tx -> i
    android.widget.ImageView iv -> j
    float StartX -> k
    float StartY -> l
    long old_totalRx -> m
    long old_totalTx -> n
    long totalRx -> o
    long totalTx -> p
    android.os.Handler handler -> q
    java.lang.Runnable task -> r
    void onCreate() -> onCreate
    void createView() -> c
    void showImg() -> a
    void dataRefresh() -> b
    void updateViewPosition() -> d
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void access$0(com.cqu.android.allservice.monitoring.FloatService,float) -> a
    void access$1(com.cqu.android.allservice.monitoring.FloatService,float) -> b
    float access$2(com.cqu.android.allservice.monitoring.FloatService) -> a
    float access$3(com.cqu.android.allservice.monitoring.FloatService) -> b
    void access$4(com.cqu.android.allservice.monitoring.FloatService,float) -> c
    void access$5(com.cqu.android.allservice.monitoring.FloatService,float) -> d
    void access$6(com.cqu.android.allservice.monitoring.FloatService,float) -> e
    void access$7(com.cqu.android.allservice.monitoring.FloatService,float) -> f
    float access$8(com.cqu.android.allservice.monitoring.FloatService) -> c
    float access$9(com.cqu.android.allservice.monitoring.FloatService) -> d
    void access$10(com.cqu.android.allservice.monitoring.FloatService) -> e
com.cqu.android.allservice.monitoring.FloatService$1 -> com.cqu.android.allservice.monitoring.d:
    com.cqu.android.allservice.monitoring.FloatService this$0 -> a
    void run() -> run
com.cqu.android.allservice.monitoring.FloatService$2 -> com.cqu.android.allservice.monitoring.e:
    com.cqu.android.allservice.monitoring.FloatService this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.cqu.android.allservice.monitoring.FloatService$3 -> com.cqu.android.allservice.monitoring.f:
    com.cqu.android.allservice.monitoring.FloatService this$0 -> a
    void onClick(android.view.View) -> onClick
com.cqu.android.allservice.monitoring.MonitoringService -> com.cqu.android.allservice.monitoring.MonitoringService:
    com.cqu.android.db.DatabaseAdapter dbAdapter -> e
    android.os.Handler handler -> f
    long mobileRx -> g
    long mobileTx -> h
    long wifiRx -> i
    long wifiTx -> j
    long old_mobileRx -> k
    long old_mobileTx -> l
    long old_wifiRx -> m
    long old_wifiTx -> n
    long totalRx -> o
    long totalTx -> p
    long mrx -> q
    long mtx -> r
    long wrx -> s
    long wtx -> t
    long mobileRx_all -> u
    long mobileTx_all -> v
    long wifiRx_all -> w
    long wifiTx_all -> x
    int count -> y
    android.app.Notification notification -> a
    android.content.Intent notificationIntent -> b
    android.app.PendingIntent pendingIntent -> c
    android.net.ConnectivityManager connManager -> z
    java.util.Calendar currentCa -> A
    boolean float_open -> B
    java.lang.Runnable thread -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void toggleGprs(boolean) -> a
    boolean isMobileConnected() -> a
    boolean isWifiConnected() -> b
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void access$0(com.cqu.android.allservice.monitoring.MonitoringService,com.cqu.android.db.DatabaseAdapter) -> a
    com.cqu.android.db.DatabaseAdapter access$1(com.cqu.android.allservice.monitoring.MonitoringService) -> a
    void access$2(com.cqu.android.allservice.monitoring.MonitoringService,java.util.Calendar) -> a
    java.util.Calendar access$3(com.cqu.android.allservice.monitoring.MonitoringService) -> b
    void access$4(com.cqu.android.allservice.monitoring.MonitoringService,long) -> a
    void access$5(com.cqu.android.allservice.monitoring.MonitoringService,long) -> b
    long access$6(com.cqu.android.allservice.monitoring.MonitoringService) -> c
    long access$7() -> c
    void access$8(com.cqu.android.allservice.monitoring.MonitoringService,long) -> c
    long access$9(com.cqu.android.allservice.monitoring.MonitoringService) -> d
    long access$10() -> d
    void access$11(com.cqu.android.allservice.monitoring.MonitoringService,long) -> d
    long access$12(com.cqu.android.allservice.monitoring.MonitoringService) -> e
    long access$13(com.cqu.android.allservice.monitoring.MonitoringService) -> f
    long access$14() -> e
    void access$15(long) -> a
    long access$16() -> f
    void access$17(long) -> b
    void access$18(long) -> c
    void access$19(long) -> d
    long access$20() -> g
    void access$21(com.cqu.android.allservice.monitoring.MonitoringService,long) -> e
    long access$22() -> h
    void access$23(com.cqu.android.allservice.monitoring.MonitoringService,long) -> f
    long access$24(com.cqu.android.allservice.monitoring.MonitoringService) -> g
    long access$25() -> i
    void access$26(com.cqu.android.allservice.monitoring.MonitoringService,long) -> g
    long access$27(com.cqu.android.allservice.monitoring.MonitoringService) -> h
    long access$28() -> j
    void access$29(com.cqu.android.allservice.monitoring.MonitoringService,long) -> h
    long access$30(com.cqu.android.allservice.monitoring.MonitoringService) -> i
    long access$31(com.cqu.android.allservice.monitoring.MonitoringService) -> j
    long access$32() -> k
    void access$33(long) -> e
    long access$34() -> l
    void access$35(long) -> f
    int access$36() -> m
    void access$37(int) -> a
    android.os.Handler access$38(com.cqu.android.allservice.monitoring.MonitoringService) -> k
    void access$39(long) -> g
    void access$40(long) -> h
    void access$41(long) -> i
    void access$42(long) -> j
com.cqu.android.allservice.monitoring.MonitoringService$1 -> com.cqu.android.allservice.monitoring.g:
    com.cqu.android.allservice.monitoring.MonitoringService this$0 -> a
    void run() -> run
com.cqu.android.allservice.monitoring.Speed -> com.cqu.android.allservice.monitoring.Speed:
    long old_totalRx -> a
    long old_totalTx -> b
    long totalRx -> c
    long totalTx -> d
    android.os.Handler speed -> e
    java.lang.Runnable task -> f
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void access$0(long) -> a
    void access$1(long) -> b
    long access$2() -> a
    long access$3() -> b
    long access$4() -> c
    long access$5() -> d
    void access$6(long) -> c
    void access$7(long) -> d
    android.os.Handler access$8(com.cqu.android.allservice.monitoring.Speed) -> a
    java.lang.Runnable access$9(com.cqu.android.allservice.monitoring.Speed) -> b
com.cqu.android.allservice.monitoring.Speed$1 -> com.cqu.android.allservice.monitoring.h:
    com.cqu.android.allservice.monitoring.Speed this$0 -> a
    void run() -> run
com.cqu.android.allservice.monitoring.TrafficMonitoring -> com.cqu.android.allservice.monitoring.i:
    java.lang.String convertTraffic(long) -> a
com.cqu.android.bean.Api -> com.cqu.android.a.a:
    com.cqu.android.bean.Api$DroidApp[] applications -> a
    boolean hasroot -> b
    void alert(android.content.Context,java.lang.CharSequence) -> a
    java.lang.String scriptHeader(android.content.Context) -> g
    void copyRawFile(android.content.Context,int,java.io.File,java.lang.String) -> a
    boolean applyIptablesRulesImpl(android.content.Context,java.util.List,java.util.List,boolean) -> a
    boolean applySavedIptablesRules(android.content.Context,boolean) -> a
    boolean applyIptablesRules(android.content.Context,boolean) -> b
    void saveRules(android.content.Context) -> a
    boolean purgeIptables(android.content.Context,boolean) -> c
    boolean clearLog(android.content.Context) -> b
    void showLog(android.content.Context) -> c
    com.cqu.android.bean.Api$DroidApp[] getApps(android.content.Context) -> d
    boolean hasRootAccess(android.content.Context,boolean) -> d
    int runScript(android.content.Context,java.lang.String,java.lang.StringBuilder,long,boolean) -> a
    int runScriptAsRoot(android.content.Context,java.lang.String,java.lang.StringBuilder,long) -> a
    int runScriptAsRoot(android.content.Context,java.lang.String,java.lang.StringBuilder) -> a
    boolean assertBinaries(android.content.Context,boolean) -> e
    boolean isEnabled(android.content.Context) -> e
    void setEnabled(android.content.Context,boolean) -> f
    void applicationRemoved(android.content.Context,int) -> a
    void storageTraffic(android.content.Context) -> f
    long[] StringSplit(java.lang.String) -> a
com.cqu.android.bean.Api$DroidApp -> com.cqu.android.a.b:
    android.graphics.drawable.Drawable icon -> a
    int uid -> b
    java.lang.String[] names -> c
    boolean selected_wifi -> d
    boolean selected_3g -> e
    java.lang.String tostr -> f
    java.lang.String packageName -> g
    android.content.pm.PackageInfo pkginfo -> h
    android.content.pm.PackageManager pm -> i
    android.content.Intent intent -> j
    void fetchPackageInfo() -> a
    android.content.Intent getIntent() -> b
    java.lang.String toString() -> toString
com.cqu.android.bean.Api$LogInfo -> com.cqu.android.a.c:
    int totalBlocked -> a
    java.util.HashMap dstBlocked -> b
    int access$1(com.cqu.android.bean.Api$LogInfo) -> a
    void access$2(com.cqu.android.bean.Api$LogInfo,int) -> a
    java.util.HashMap access$3(com.cqu.android.bean.Api$LogInfo) -> b
com.cqu.android.bean.Api$ScriptRunner -> com.cqu.android.a.d:
    java.io.File file -> b
    java.lang.String script -> c
    java.lang.StringBuilder res -> d
    boolean asroot -> e
    int exitcode -> a
    java.lang.Process exec -> f
    void run() -> run
    void destroy() -> destroy
com.cqu.android.db.DatabaseAdapter -> com.cqu.android.b.a:
    java.text.SimpleDateFormat sdf -> a
    android.content.Context mContext -> b
    android.database.sqlite.SQLiteDatabase mSQLiteDatabase -> c
    com.cqu.android.db.DatabaseAdapter$DatabaseHelper mDatabaseHelper -> d
    void open() -> a
    void close() -> b
    void insertData(long,long,int,java.util.Date) -> a
    void updateData(long,long,int,java.util.Date) -> b
    android.database.Cursor check(int,java.util.Date) -> a
    android.database.Cursor fetchDayFlow(int,int,int,int) -> a
    android.database.Cursor fetchMonthFlow(int,int,int) -> a
    long getProFlowUp(int,java.util.Date) -> b
    long getProFlowDw(int,java.util.Date) -> c
    long calculate(int,int,int,int) -> b
    long weekUpFloew(int) -> a
    long weekDownFloew(int) -> b
    long calculateUpForMonth(int,int,int) -> b
    long calculateDnForMonth(int,int,int) -> c
    long calculateForMonth(int,int,int) -> d
    long calculateUp(int,int,int,int) -> c
    long calculateDw(int,int,int,int) -> d
    void clear() -> c
com.cqu.android.db.DatabaseAdapter$DatabaseHelper -> com.cqu.android.b.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.achartengine.ChartFactory -> org.achartengine.a:
    android.content.Intent getRangeBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type,java.lang.String) -> a
    android.content.Intent getCombinedXYChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String[],java.lang.String) -> a
    android.content.Intent getDialChartIntent(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DialRenderer,java.lang.String) -> a
    void checkParameters(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void checkParameters(org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer) -> a
org.achartengine.GraphicalActivity -> org.achartengine.GraphicalActivity:
    org.achartengine.GraphicalView mView -> a
    org.achartengine.chart.AbstractChart mChart -> b
    void onCreate(android.os.Bundle) -> onCreate
org.achartengine.GraphicalView -> org.achartengine.b:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    android.graphics.Rect mRect -> c
    android.os.Handler mHandler -> d
    android.graphics.RectF mZoomR -> e
    android.graphics.Bitmap zoomInImage -> f
    android.graphics.Bitmap zoomOutImage -> g
    android.graphics.Bitmap fitZoomImage -> h
    int zoomSize -> i
    int ZOOM_BUTTONS_COLOR -> j
    org.achartengine.tools.Zoom mZoomIn -> k
    org.achartengine.tools.Zoom mZoomOut -> l
    org.achartengine.tools.FitZoom mFitZoom -> m
    android.graphics.Paint mPaint -> n
    org.achartengine.ITouchHandler mTouchHandler -> o
    float oldX -> p
    float oldY -> q
    org.achartengine.model.SeriesSelection getCurrentSeriesAndPoint() -> getCurrentSeriesAndPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setZoomRate(float) -> setZoomRate
    void zoomIn() -> a
    void zoomOut() -> b
    void zoomReset() -> c
    android.graphics.RectF getZoomRectangle() -> getZoomRectangle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> d
org.achartengine.GraphicalView$1 -> org.achartengine.c:
    org.achartengine.GraphicalView this$0 -> a
    void run() -> run
org.achartengine.ITouchHandler -> org.achartengine.d:
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandler -> org.achartengine.e:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    float oldX2 -> d
    float oldY2 -> e
    android.graphics.RectF zoomR -> f
    org.achartengine.tools.Pan mPan -> g
    org.achartengine.tools.Zoom mPinchZoom -> h
    org.achartengine.GraphicalView graphicalView -> i
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandlerOld -> org.achartengine.f:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    android.graphics.RectF zoomR -> d
    org.achartengine.tools.Pan mPan -> e
    org.achartengine.GraphicalView graphicalView -> f
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.chart.AbstractChart -> org.achartengine.a.a:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> a
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> a
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> a
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> a
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> a
    float[] calculateDrawPoints(float,float,float,float,int,int) -> a
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    int getLegendSize(org.achartengine.renderer.DefaultRenderer,int,float) -> a
    boolean isNullValue(double) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
org.achartengine.chart.BarChart -> org.achartengine.a.b:
    org.achartengine.chart.BarChart$Type mType -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    void drawBar(android.graphics.Canvas,float,float,float,float,float,int,int,android.graphics.Paint) -> a
    void drawBar(android.graphics.Canvas,float,float,float,float,int,int,android.graphics.Paint) -> a
    int getGradientPartialColor(int,int,float) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    float getHalfDiffX(float[],int,int) -> a
    float getCoeficient() -> a
    boolean isRenderNullValues() -> b
    java.lang.String getChartType() -> c
org.achartengine.chart.BarChart$Type -> org.achartengine.a.c:
    org.achartengine.chart.BarChart$Type DEFAULT -> a
    org.achartengine.chart.BarChart$Type STACKED -> b
    org.achartengine.chart.BarChart$Type[] $VALUES -> c
    org.achartengine.chart.BarChart$Type[] values() -> values
    org.achartengine.chart.BarChart$Type valueOf(java.lang.String) -> valueOf
org.achartengine.chart.BubbleChart -> org.achartengine.a.d:
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.ClickableArea -> org.achartengine.a.e:
    android.graphics.RectF rect -> a
    double x -> b
    double y -> c
    android.graphics.RectF getRect() -> a
    double getX() -> b
    double getY() -> c
org.achartengine.chart.CombinedXYChart -> org.achartengine.a.f:
    org.achartengine.chart.XYChart[] mCharts -> a
    java.lang.Class[] xyChartTypes -> d
    org.achartengine.chart.XYChart getXYChart(java.lang.String) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.CubicLineChart -> org.achartengine.a.g:
    float firstMultiplier -> a
    float secondMultiplier -> d
    org.achartengine.model.Point p1 -> e
    org.achartengine.model.Point p2 -> f
    org.achartengine.model.Point p3 -> g
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    void calc(float[],org.achartengine.model.Point,int,int,float) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.DialChart -> org.achartengine.a.h:
    org.achartengine.renderer.DialRenderer mRenderer -> e
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    double getAngleForValue(double,double,double,double,double) -> a
    void drawTicks(android.graphics.Canvas,double,double,double,double,int,int,double,double,double,android.graphics.Paint,boolean) -> a
    void drawNeedle(android.graphics.Canvas,double,int,int,double,boolean,android.graphics.Paint) -> a
org.achartengine.chart.LineChart -> org.achartengine.a.i:
    org.achartengine.chart.ScatterChart pointsChart -> a
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a_
    java.lang.String getChartType() -> c
org.achartengine.chart.PointStyle -> org.achartengine.a.j:
    org.achartengine.chart.PointStyle X -> a
    org.achartengine.chart.PointStyle CIRCLE -> b
    org.achartengine.chart.PointStyle TRIANGLE -> c
    org.achartengine.chart.PointStyle SQUARE -> d
    org.achartengine.chart.PointStyle DIAMOND -> e
    org.achartengine.chart.PointStyle POINT -> f
    java.lang.String mName -> g
    org.achartengine.chart.PointStyle[] $VALUES -> h
    org.achartengine.chart.PointStyle[] values() -> values
    org.achartengine.chart.PointStyle valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> a
    java.lang.String toString() -> toString
org.achartengine.chart.RangeBarChart -> org.achartengine.a.k:
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int,int) -> a
    float getCoeficient() -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.RoundChart -> org.achartengine.a.l:
    org.achartengine.model.CategorySeries mDataset -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    int mCenterX -> c
    int mCenterY -> d
    void drawTitle(android.graphics.Canvas,int,int,int,android.graphics.Paint) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    org.achartengine.renderer.DefaultRenderer getRenderer() -> a
    int getCenterX() -> b
    int getCenterY() -> c
    void setCenterX(int) -> b
    void setCenterY(int) -> c
org.achartengine.chart.ScatterChart -> org.achartengine.a.m:
    float size -> a
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> b
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> a
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> c
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> b
    java.lang.String getChartType() -> c
org.achartengine.chart.ScatterChart$1 -> org.achartengine.a.n:
    int[] $SwitchMap$org$achartengine$chart$PointStyle -> a
org.achartengine.chart.TimeChart -> org.achartengine.a.o:
    java.lang.String mDateFormat -> a
    boolean mXAxisSmart -> d
    java.lang.Double mStartPoint -> e
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    java.text.DateFormat getDateFormat(double,double) -> a
    java.lang.String getChartType() -> c
    java.util.List getXLabels(double,double,int) -> a
org.achartengine.chart.XYChart -> org.achartengine.a.p:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> b
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> c
    float mScale -> a
    float mTranslate -> d
    org.achartengine.model.Point mCenter -> e
    android.graphics.Rect mScreenR -> f
    java.util.Map mCalcRange -> g
    java.util.Map clickableAreas -> h
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    java.util.List getXLabels(double,double,int) -> a
    java.util.Map getYLabels(double[],double[],int) -> a
    android.graphics.Rect getScreenR() -> d
    void setScreenR(android.graphics.Rect) -> a
    java.util.List getValidLabels(java.util.List) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> a
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int,int) -> a
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> a
    void transform(android.graphics.Canvas,float,boolean) -> a
    java.lang.String getLabel(double) -> b
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> a
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> e
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> f
    double[] getCalcRange(int) -> b
    void setCalcRange(double[],int) -> a
    int getLabelLinePos(android.graphics.Paint$Align) -> a
    double[] toRealPoint(float,float,int) -> a
    double[] toScreenPoint(double[],int) -> b
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(float[],double[],float,int,int) -> a
    boolean isRenderNullValues() -> b
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a_
    java.lang.String getChartType() -> c
org.achartengine.model.CategorySeries -> org.achartengine.b.a:
    java.lang.String mTitle -> a
    java.util.List mCategories -> b
    java.util.List mValues -> c
    java.lang.String getTitle() -> a
    void add(double) -> a
    void add(java.lang.String,double) -> a
    double getValue(int) -> a
    java.lang.String getCategory(int) -> b
    int getItemCount() -> b
    org.achartengine.model.XYSeries toXYSeries() -> c
org.achartengine.model.Point -> org.achartengine.b.b:
    float mX -> a
    float mY -> b
    float getX() -> a
    float getY() -> b
    void setX(float) -> a
    void setY(float) -> b
org.achartengine.model.RangeCategorySeries -> org.achartengine.b.c:
    java.util.List mMaxValues -> a
    void add(double,double) -> a
    double getMinimumValue(int) -> c
    double getMaximumValue(int) -> d
    org.achartengine.model.XYSeries toXYSeries() -> c
org.achartengine.model.SeriesSelection -> org.achartengine.b.d:
    int mSeriesIndex -> a
    int mPointIndex -> b
    double mXValue -> c
    double mValue -> d
org.achartengine.model.XYMultipleSeriesDataset -> org.achartengine.b.e:
    java.util.List mSeries -> a
    void addSeries(org.achartengine.model.XYSeries) -> a
    void addSeries(int,org.achartengine.model.XYSeries) -> a
    org.achartengine.model.XYSeries getSeriesAt(int) -> a
    int getSeriesCount() -> a
    org.achartengine.model.XYSeries[] getSeries() -> b
org.achartengine.model.XYSeries -> org.achartengine.b.f:
    java.lang.String mTitle -> a
    org.achartengine.util.IndexXYMap mXY -> b
    double mMinX -> c
    double mMaxX -> d
    double mMinY -> e
    double mMaxY -> f
    int mScaleNumber -> g
    int getScaleNumber() -> a
    void initRange() -> h
    void updateRange(double,double) -> b
    java.lang.String getTitle() -> b
    void add(double,double) -> a
    double getX(int) -> a
    double getY(int) -> b
    java.util.SortedMap getRange(double,double,int) -> a
    int getIndexForKey(double) -> a
    int getItemCount() -> c
    double getMinX() -> d
    double getMinY() -> e
    double getMaxX() -> f
    double getMaxY() -> g
org.achartengine.model.XYValueSeries -> org.achartengine.b.g:
    java.util.List mValue -> a
    double mMinValue -> b
    double mMaxValue -> c
    void add(double,double,double) -> a
    void updateRange(double) -> b
    void add(double,double) -> a
    double getValue(int) -> c
    double getMaxValue() -> h
org.achartengine.renderer.BasicStroke -> org.achartengine.c.a:
    org.achartengine.renderer.BasicStroke SOLID -> a
    org.achartengine.renderer.BasicStroke DASHED -> b
    org.achartengine.renderer.BasicStroke DOTTED -> c
    android.graphics.Paint$Cap mCap -> d
    android.graphics.Paint$Join mJoin -> e
    float mMiter -> f
    float[] mIntervals -> g
    float mPhase -> h
    android.graphics.Paint$Cap getCap() -> a
    android.graphics.Paint$Join getJoin() -> b
    float getMiter() -> c
    float[] getIntervals() -> d
    float getPhase() -> e
org.achartengine.renderer.DefaultRenderer -> org.achartengine.c.b:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    android.graphics.Typeface REGULAR_TEXT_FONT -> c
    java.lang.String mTextTypefaceName -> d
    int mTextTypefaceStyle -> e
    int mBackgroundColor -> f
    boolean mApplyBackgroundColor -> g
    boolean mShowAxes -> h
    int mAxesColor -> i
    boolean mShowLabels -> j
    int mLabelsColor -> k
    float mLabelsTextSize -> l
    boolean mShowLegend -> m
    float mLegendTextSize -> n
    boolean mFitLegend -> o
    boolean mShowGridX -> p
    boolean mShowGridY -> q
    boolean mShowCustomTextGrid -> r
    java.util.List mRenderers -> s
    boolean mAntialiasing -> t
    int mLegendHeight -> u
    int[] mMargins -> v
    float mScale -> w
    boolean mPanEnabled -> x
    boolean mZoomEnabled -> y
    boolean mZoomButtonsVisible -> z
    float mZoomRate -> A
    boolean mExternalZoomEnabled -> B
    float mOriginalScale -> C
    boolean mClickEnabled -> D
    int selectableBuffer -> E
    boolean mInScroll -> F
    float mStartAngle -> G
    java.lang.String getChartTitle() -> a
    void setChartTitle(java.lang.String) -> a
    float getChartTitleTextSize() -> b
    void setChartTitleTextSize(float) -> a
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    void addSeriesRenderer(int,org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> a
    int getSeriesRendererCount() -> c
    int getBackgroundColor() -> d
    boolean isApplyBackgroundColor() -> e
    int getAxesColor() -> f
    void setAxesColor(int) -> b
    int getLabelsColor() -> g
    void setLabelsColor(int) -> c
    float getLabelsTextSize() -> h
    void setLabelsTextSize(float) -> b
    boolean isShowAxes() -> i
    boolean isShowLabels() -> j
    void setShowLabels(boolean) -> a
    boolean isShowGridX() -> k
    boolean isShowGridY() -> l
    void setShowGridX(boolean) -> b
    void setShowGridY(boolean) -> c
    void setShowGrid(boolean) -> d
    boolean isShowCustomTextGrid() -> m
    boolean isShowLegend() -> n
    boolean isFitLegend() -> o
    java.lang.String getTextTypefaceName() -> p
    int getTextTypefaceStyle() -> q
    float getLegendTextSize() -> r
    void setLegendTextSize(float) -> c
    boolean isAntialiasing() -> s
    float getScale() -> t
    float getOriginalScale() -> u
    void setScale(float) -> d
    boolean isZoomEnabled() -> v
    boolean isZoomButtonsVisible() -> w
    void setZoomButtonsVisible(boolean) -> e
    boolean isExternalZoomEnabled() -> x
    float getZoomRate() -> y
    boolean isPanEnabled() -> z
    boolean isClickEnabled() -> A
    int getSelectableBuffer() -> B
    int getLegendHeight() -> C
    int[] getMargins() -> D
    void setMargins(int[]) -> a
    boolean isInScroll() -> E
org.achartengine.renderer.DialRenderer -> org.achartengine.c.c:
    double mAngleMin -> a
    double mAngleMax -> b
    double mMinValue -> c
    double mMaxValue -> d
    double mMinorTickSpacing -> e
    double mMajorTickSpacing -> f
    java.util.List mVisualTypes -> g
    double getAngleMin() -> F
    double getAngleMax() -> G
    double getMinValue() -> H
    void setMinValue(double) -> a
    boolean isMinValueSet() -> I
    double getMaxValue() -> J
    void setMaxValue(double) -> b
    boolean isMaxValueSet() -> K
    double getMinorTicksSpacing() -> L
    double getMajorTicksSpacing() -> M
    org.achartengine.renderer.DialRenderer$Type getVisualTypeForIndex(int) -> d
    void setVisualTypes(org.achartengine.renderer.DialRenderer$Type[]) -> a
org.achartengine.renderer.DialRenderer$Type -> org.achartengine.c.d:
    org.achartengine.renderer.DialRenderer$Type NEEDLE -> a
    org.achartengine.renderer.DialRenderer$Type ARROW -> b
    org.achartengine.renderer.DialRenderer$Type[] $VALUES -> c
    org.achartengine.renderer.DialRenderer$Type[] values() -> values
    org.achartengine.renderer.DialRenderer$Type valueOf(java.lang.String) -> valueOf
org.achartengine.renderer.SimpleSeriesRenderer -> org.achartengine.c.e:
    int mColor -> a
    boolean mDisplayChartValues -> b
    float mChartValuesTextSize -> c
    android.graphics.Paint$Align mChartValuesTextAlign -> d
    float mChartValuesSpacing -> e
    org.achartengine.renderer.BasicStroke mStroke -> f
    boolean mGradientEnabled -> g
    double mGradientStartValue -> h
    int mGradientStartColor -> i
    double mGradientStopValue -> j
    int mGradientStopColor -> k
    int getColor() -> a
    void setColor(int) -> a
    boolean isDisplayChartValues() -> b
    void setDisplayChartValues(boolean) -> a
    float getChartValuesTextSize() -> c
    void setChartValuesTextSize(float) -> a
    android.graphics.Paint$Align getChartValuesTextAlign() -> d
    float getChartValuesSpacing() -> e
    void setChartValuesSpacing(float) -> b
    org.achartengine.renderer.BasicStroke getStroke() -> f
    boolean isGradientEnabled() -> g
    void setGradientEnabled(boolean) -> b
    double getGradientStartValue() -> h
    int getGradientStartColor() -> i
    void setGradientStart(double,int) -> a
    double getGradientStopValue() -> j
    int getGradientStopColor() -> k
    void setGradientStop(double,int) -> b
org.achartengine.renderer.XYMultipleSeriesRenderer -> org.achartengine.c.f:
    java.lang.String mXTitle -> a
    java.lang.String[] mYTitle -> b
    float mAxisTitleTextSize -> c
    double[] mMinX -> d
    double[] mMaxX -> e
    double[] mMinY -> f
    double[] mMaxY -> g
    int mXLabels -> h
    int mYLabels -> i
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> j
    java.util.Map mXTextLabels -> k
    java.util.Map mYTextLabels -> l
    boolean mPanXEnabled -> m
    boolean mPanYEnabled -> n
    boolean mZoomXEnabled -> o
    boolean mZoomYEnabled -> p
    double mBarSpacing -> q
    int mMarginsColor -> r
    double[] mPanLimits -> s
    double[] mZoomLimits -> t
    float mXLabelsAngle -> u
    float mYLabelsAngle -> v
    java.util.Map initialRange -> w
    float mPointSize -> x
    int mGridColor -> y
    int scalesCount -> z
    android.graphics.Paint$Align xLabelsAlign -> A
    android.graphics.Paint$Align[] yLabelsAlign -> B
    android.graphics.Paint$Align[] yAxisAlign -> C
    int mXLabelsColor -> D
    int[] mYLabelsColor -> E
    void initAxesRange(int) -> d
    void initAxesRangeForScale(int) -> e
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> F
    java.lang.String getXTitle() -> G
    void setXTitle(java.lang.String) -> b
    java.lang.String getYTitle() -> H
    java.lang.String getYTitle(int) -> f
    void setYTitle(java.lang.String) -> c
    void setYTitle(java.lang.String,int) -> a
    float getAxisTitleTextSize() -> I
    void setAxisTitleTextSize(float) -> e
    void setXAxisMin(double) -> a
    void setXAxisMax(double) -> b
    void setYAxisMin(double) -> c
    void setYAxisMax(double) -> d
    double getXAxisMin(int) -> g
    void setXAxisMin(double,int) -> a
    boolean isMinXSet(int) -> h
    double getXAxisMax(int) -> i
    void setXAxisMax(double,int) -> b
    boolean isMaxXSet(int) -> j
    double getYAxisMin(int) -> k
    void setYAxisMin(double,int) -> c
    boolean isMinYSet(int) -> l
    double getYAxisMax(int) -> m
    void setYAxisMax(double,int) -> d
    boolean isMaxYSet(int) -> n
    int getXLabels() -> J
    void setXLabels(int) -> o
    void addXTextLabel(double,java.lang.String) -> a
    java.lang.String getXTextLabel(java.lang.Double) -> a
    java.lang.Double[] getXTextLabelLocations() -> K
    void addYTextLabel(double,java.lang.String) -> b
    void addYTextLabel(double,java.lang.String,int) -> a
    java.lang.String getYTextLabel(java.lang.Double,int) -> a
    java.lang.Double[] getYTextLabelLocations(int) -> p
    int getYLabels() -> L
    void setYLabels(int) -> q
    boolean isPanEnabled() -> z
    boolean isPanXEnabled() -> M
    boolean isPanYEnabled() -> N
    boolean isZoomEnabled() -> v
    boolean isZoomXEnabled() -> O
    boolean isZoomYEnabled() -> P
    double getBarSpacing() -> Q
    void setBarSpacing(double) -> e
    int getMarginsColor() -> R
    void setMarginsColor(int) -> r
    int getGridColor() -> S
    double[] getPanLimits() -> T
    void setPanLimits(double[]) -> a
    double[] getZoomLimits() -> U
    void setZoomLimits(double[]) -> b
    float getXLabelsAngle() -> V
    float getYLabelsAngle() -> W
    float getPointSize() -> X
    void setPointSize(float) -> f
    void setRange(double[],int) -> a
    boolean isInitialRangeSet() -> Y
    boolean isInitialRangeSet(int) -> s
    double[] getInitialRange(int) -> t
    int getXLabelsColor() -> Z
    int getYLabelsColor(int) -> u
    android.graphics.Paint$Align getXLabelsAlign() -> aa
    void setXLabelsAlign(android.graphics.Paint$Align) -> a
    android.graphics.Paint$Align getYLabelsAlign(int) -> v
    void setYLabelsAlign(android.graphics.Paint$Align) -> b
    android.graphics.Paint$Align getYAxisAlign(int) -> w
    void setYLabelsAlign(android.graphics.Paint$Align,int) -> a
    int getScalesCount() -> ab
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> org.achartengine.c.g:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> b
    int mAngle -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> d
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
    int getAngle() -> a
org.achartengine.renderer.XYSeriesRenderer -> org.achartengine.c.h:
    boolean mFillPoints -> a
    boolean mFillBelowLine -> b
    int mFillColor -> c
    org.achartengine.chart.PointStyle mPointStyle -> d
    float mLineWidth -> e
    boolean isFillBelowLine() -> l
    boolean isFillPoints() -> m
    void setFillPoints(boolean) -> c
    int getFillBelowLineColor() -> n
    org.achartengine.chart.PointStyle getPointStyle() -> o
    void setPointStyle(org.achartengine.chart.PointStyle) -> a
    float getLineWidth() -> p
    void setLineWidth(float) -> c
org.achartengine.tools.AbstractTool -> org.achartengine.d.a:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    double[] getRange(int) -> a
    void checkRange(double[],int) -> a
    void setXRange(double,double,int) -> a
    void setYRange(double,double,int) -> b
org.achartengine.tools.FitZoom -> org.achartengine.d.b:
    void apply() -> a
org.achartengine.tools.Pan -> org.achartengine.d.c:
    java.util.List mPanListeners -> c
    boolean limitsReachedX -> d
    boolean limitsReachedY -> e
    void apply(float,float,float,float) -> a
    double getAxisRatio(double[]) -> a
    void notifyPanListeners() -> a
org.achartengine.tools.PanListener -> org.achartengine.d.d:
    void panApplied() -> a
org.achartengine.tools.Zoom -> org.achartengine.d.e:
    boolean mZoomIn -> c
    float mZoomRate -> d
    java.util.List mZoomListeners -> e
    boolean limitsReachedX -> f
    boolean limitsReachedY -> g
    void setZoomRate(float) -> a
    void apply(int) -> b
    void notifyZoomListeners(org.achartengine.tools.ZoomEvent) -> a
    void notifyZoomResetListeners() -> a
org.achartengine.tools.ZoomEvent -> org.achartengine.d.f:
    boolean mZoomIn -> a
    float mZoomRate -> b
org.achartengine.tools.ZoomListener -> org.achartengine.d.g:
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> a
    void zoomReset() -> a
org.achartengine.util.IndexXYMap -> org.achartengine.e.a:
    java.util.List indexList -> a
    double maxXDifference -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> a
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> a
    java.lang.Object getYByIndex(int) -> b
    int getIndexForKey(java.lang.Object) -> a
org.achartengine.util.MathHelper -> org.achartengine.e.b:
    java.text.NumberFormat FORMAT -> a
    java.util.List getLabels(double,double,int) -> a
    double[] computeLabels(double,double,int) -> b
    double roundUp(double) -> a
    float[] getFloats(java.util.List) -> a
    double[] getDoubles(java.util.List) -> b
